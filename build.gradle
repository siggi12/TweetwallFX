buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "cz.kubacki.gradle.plugins:gradle-nbm-plugin:1.9.0"
        gradleApi()
    }
}

apply plugin: 'build-dashboard'

subprojects {
    apply plugin: 'java'
    apply plugin: 'findbugs'
    apply plugin: 'jacoco'
    apply plugin: 'eclipse'
    
    group = "org.tweetwallfx"
    
    repositories {
        jcenter()
    }
    dependencies {
        testCompile 'junit:junit:4.11'
    }
    version = '1.0'
    
    jar {
        manifest.attributes provider: 'gradle'
    }

    compileJava {
        options.compilerArgs << "-Xlint:all"
        options.compilerArgs << "-Werror"
    } 

    findbugs {
        ignoreFailures = false
    }
    
    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

project (":TweetWallFX-Configuration") {
    dependencies {
        compile group: "log4j", name: "log4j", version: "1.2.17"
    }
}

project(":TweetWallFX-Tweet-API") {
    dependencies {
    }
}

project(":TweetWallFX-Tweet-Impl-Twitter4J") {
    dependencies {
        compile group: "org.twitter4j", name: "twitter4j-core", version: "4.0.3"
        compile group: "org.twitter4j", name: "twitter4j-stream", version: "4.0.3"
        compile group: "log4j", name: "log4j", version: "1.2.17"
        compile project(':TweetWallFX-Tweet-API')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J-OAuth')
        compile project(':TweetWallFX-Configuration')
    }
}

project(":TweetWallFX-Core"){
    dependencies {
        compile group: "de.jensd", name: "fontawesomefx", version: "8.9"
        compile group: "log4j", name: "log4j", version: "1.2.17"
        compile group: "com.vdurmont", name: "emoji-java", version: "3.1.3"
        compile project(':TweetWallFX-Tweet-API')
        compile project(':TweetWallFX-Configuration')
    }
}

project(":TweetWallFX-2D"){
    dependencies {
        compile project(':TweetWallFX-Core')
        compile project(':TweetWallFX-Controls')
    }
}

project(":TweetWallFX-3D"){
    dependencies {
        compile fileTree(dir: 'libs', include: '*.jar')
        compile project(':TweetWallFX-Core')
    }
}

project(":TweetWallFX-Controls"){
    dependencies {
        compile project(':TweetWallFX-Core')
    }
}

project(":TweetWallFX-Devoxx"){
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-Devoxx-2015"){
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-Devoxx-2016"){
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-Devoxx-2017-US") {
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-Devoxx-2017-FR") {
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-NetBeans") {
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-JavaOne") {
    apply plugin: "application"
    mainClassName = "org.tweetwallfx.generic.Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Generic2D')
        compile project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-Generic2D") {
    dependencies {
        compile project(':TweetWallFX-2D')
        compile project(':TweetWallFX-Controls')
    }
}

project(":TweetWallFX-EmbeddableTest") {
    apply plugin: 'application'
    mainClassName = "Main"

    tasks.withType(JavaExec) {
        main mainClassName
    }

    task('debug', dependsOn: 'classes', type: JavaExec) {
        classpath sourceSets.main.runtimeClasspath
        debug = true
    }

    dependencies {
        compile project(':TweetWallFX-Embeddable')
        runtime project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
}

project(":TweetWallFX-Embeddable") {
    apply plugin: "java"
    apply plugin: 'cz.kubacki.nbm'
    
    dependencies {
        compile project(':TweetWallFX-2D')
        compile project(':TweetWallFX-Controls')
        runtime project(':TweetWallFX-Tweet-Impl-Twitter4J')
    }
    
    task copyToLib(type: Copy) {
        into "$buildDir/lib"
        from configurations.runtime
    }    
    
    nbm {
//        moduleName = "org.tweetwallfx.embeddable"

        friendPackages {
            add "org.tweetwallfx.embeddable"
        }
    }

    tasks.assemble.dependsOn tasks.copyToLib
}

description = 'TweetWallFX'

task createFolders(description: 'Creates the source folders if they do not exist.') doLast {
    rootProject.allprojects.each {p ->
        if (p.hasProperty('sourceSets')) {
            p.sourceSets*.allSource*.srcDirs*.each { File srcDir ->
                if (!srcDir.isDirectory()) {
                    println "Creating source folder: ${srcDir}"
                    srcDir.mkdirs()
                }
            }
        }
    }
}

task ('runDevoxx', dependsOn: ':TweetWallFX-Devoxx:run')
task ('runDevoxx2015', dependsOn: ':TweetWallFX-Devoxx-2015:run')
task ('runDevoxx2017US', dependsOn: ':TweetWallFX-Devoxx-2017-US:run')
task ('runDevoxx2017FR', dependsOn: ':TweetWallFX-Devoxx-2017-FR:run')
task ('runJavaOne', dependsOn: ':TweetWallFX-JavaOne:run')
task ('runNetBeans', dependsOn: ':TweetWallFX-NetBeans:run')
